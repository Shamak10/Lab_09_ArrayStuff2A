import java.util.Arrays;

public class ArrayMethods {
    public static void main(String[] args) {
        int[] dataPoints = new int[100];
        for (int i = 0; i < dataPoints.length; i++) {
            dataPoints[i] = (int) (Math.random() * 100) + 1;
        }
        System.out.println("Array: " + Arrays.toString(dataPoints));
        int min = min(dataPoints);
        System.out.println("Minimum value in the array: " + min);
        int max = max(dataPoints);
        System.out.println("Maximum value in the array: " + max);
        int target = 50;
        int count = occuranceScan(dataPoints, target);
        System.out.println(target + " appears " + count + " times in the array.");
        int sum = sum(dataPoints);
        System.out.println("Sum of the array elements: " + sum);
        boolean contains = contains(dataPoints, target);
        System.out.println("Does the array contain " + target + "? " + contains);
    }
    public static int min(int[] values) {
        int min = values[0];
        for (int i = 1; i < values.length; i++) {
            if (values[i] < min) {
                min = values[i];
            }
        }
        return min;
    }
    public static int max(int[] values) {
        int max = values[0];
        for (int i = 1; i < values.length; i++) {
            if (values[i] > max) {
                max = values[i];
            }
        }
        return max;
    }
    public static int occuranceScan(int[] values, int target) {
        int count = 0;
        for (int i = 0; i < values.length; i++) {
            if (values[i] == target) {
                count++;
            }
        }
        return count;
    }
    public static int sum(int[] values) {
        int sum = 0;
        for (int i = 0; i < values.length; i++) {
            sum += values[i];
        }
        return sum;
    }
    public static boolean contains(int[] values, int target) {
        for (int i = 0; i < values.length; i++) {
            if (values[i] == target) {
                return true;
            }
        }
        return false;
    }
}
